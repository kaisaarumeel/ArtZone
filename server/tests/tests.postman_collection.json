{
	"info": {
		"_postman_id": "01dc0833-1f40-4086-96d5-090fc8711a50",
		"name": "Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28264405",
		"_collection_link": "https://dark-flare-212796.postman.co/workspace/Web-Development~0e66dd01-fb56-49e1-bb38-4c2c54fe3f60/collection/28264405-01dc0833-1f40-4086-96d5-090fc8711a50?action=share&source=collection_link&creator=28264405"
	},
	"item": [
		{
			"name": "Tested",
			"item": [
				{
					"name": "Users",
					"item": [
						{
							"name": "Register test user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete test user fail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", function () {",
											"   pm.response.to.have.status(403);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   var jsonData = JSON.parse(responseBody);",
											"    pm.collectionVariables.set(\"xauthtoken\",jsonData.key);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userEmail\":\"bob@gmail.com\",\n    \"password\":\"b493d48364afe44d11c0165cf470a4164d1e2609911ef998be868d46ade3de4e\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete test user success",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register test user again",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register test user 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon2@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register test user 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon3@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register test user 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon4@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register test user 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon5@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register test user 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"{{$randomFirstName}}\",\n        \"lastName\":\"{{$randomLastName}}\"\n    },\n    \"isAdmin\":false,\n    \"address\":{\n        \"country\":\"US\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bobylon6@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all users paginated",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"",
											"pm.test(\"Received users\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.hasNextPage).to.eql(true);",
											"        pm.expect(jsonData.totalPages).to.eql(2);",
											"",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"let reqBody = JSON.parse(pm.request.body);\r",
											"pm.collectionVariables.set(\"email\", reqBody.userEmail, String);"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/page/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"page",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login test user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"   var jsonData = JSON.parse(responseBody);",
											"    pm.collectionVariables.set(\"xauthtoken2\",jsonData.key);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"userEmail\":\"bobylon@gmail.com\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/login",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Register new admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"Admin\",\n        \"lastName\":\"Admin\"\n    },\n    \"isAdmin\":true,\n    \"address\":{\n        \"country\":\"SE\",\n        \"street\":\"Bob street 1\",\n        \"zip\":\"12345\",\n        \"city\":\"Bobtown\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"boby@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/register",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch admin name",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"modified\",\n        \"lastName\":\"modified\"\n    }\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get admin and verify patch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"pm.test(\"Modified first name and last name\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.name.firstName).to.eql(\"modified\");",
											"        pm.expect(jsonData.name.lastName).to.eql(\"modified\");",
											"",
											"    });",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com"
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace user data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\":{\n        \"firstName\":\"replaced\",\n        \"lastName\":\"replaced\"\n    },\n    \"isAdmin\":true,\n    \"address\":{\n        \"country\":\"SE\",\n        \"street\":\"replaced\",\n        \"zip\":\"replaced\",\n        \"city\":\"replaced\"\n    },\n    \"dateOfBirth\":\"2022-08-31\",\n    \"password\":\"81b637d8fcd2c6da6359e6963113a1170de795e4b725b84d1e0b4cfd9ec58ce9\",\n    \"userEmail\":\"bob@gmail.com\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get admin and verify put",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Replaced data\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.name.firstName).to.eql(\"replaced\");",
											"        pm.expect(jsonData.name.lastName).to.eql(\"replaced\");",
											"        pm.expect(jsonData.address.country).to.eql(\"SE\");",
											"        pm.expect(jsonData.address.street).to.eql(\"replaced\");",
											"        pm.expect(jsonData.address.zip).to.eql(\"replaced\");",
											"        pm.expect(jsonData.address.city).to.eql(\"replaced\");",
											"",
											"    });",
											" "
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Listings",
					"item": [
						{
							"name": "Add listing to test user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var postRespone = pm.response.json();",
											"",
											"pm.globals.set(\"listingPostId\", postRespone.id)",
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Kaisa\",\n    \"author\":\"Listing Author\",\n    \"price\": 20.99,\n    \"picture\": \"jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all listings from test user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Received listing\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData[0].name).to.eql(\"Kaisa\");",
											"        pm.expect(jsonData[0].author).to.eql(\"Listing Author\");",
											"        pm.expect(jsonData[0].price).to.eql(20.99);",
											"        pm.expect(jsonData[0].picture).to.eql(\"jpg\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific listing from test user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Received listing\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.name).to.eql(\"Kaisa\");",
											"        pm.expect(jsonData.author).to.eql(\"Listing Author\");",
											"        pm.expect(jsonData.price).to.eql(20.99);",
											"        pm.expect(jsonData.picture).to.eql(\"jpg\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch listing data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"TEST\",\n    \"author\": \"Listing Author\",\n    \"price\": 1000,\n    \"picture\": \"LISTING.jpg\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify patch",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verified patch\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.name).to.eql(\"TEST\");",
											"        pm.expect(jsonData.author).to.eql(\"Listing Author\");",
											"        pm.expect(jsonData.price).to.eql(1000);",
											"        pm.expect(jsonData.picture).to.eql(\"LISTING.jpg\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Replace listing data",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Lauri\",\n    \"author\": \"author\",\n    \"price\": 9,\n    \"picture\": \"listing.jpg\",\n    \"description\": \"very nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify put",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Verified put\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.name).to.eql(\"Lauri\");",
											"        pm.expect(jsonData.author).to.eql(\"author\");",
											"        pm.expect(jsonData.price).to.eql(9);",
											"        pm.expect(jsonData.picture).to.eql(\"listing.jpg\");",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a listing from a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"   pm.response.to.have.status(204);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific listing from a user Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings/{{listingPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings",
										"{{listingPostId}}"
									],
									"query": [
										{
											"key": "",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Add listing 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Kaisa\",\n    \n    \"author\": \"Listing Author\",\n    \"price\": 21,\n    \"picture\": \"listing.jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add listing 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Bob\",\n    \"author\": \"Listing Author\",\n    \"price\": 23,\n    \"picture\": \"listing.jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add listing 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Michael\",\n    \"author\": \"Listing Author\",\n    \"price\": 26,\n    \"picture\": \"listing.jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get listings by page 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Received listing\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.listings.length).to.eql(3);",
											"        pm.expect(jsonData.listings[0].name).to.eql(\"Kaisa\");",
											"        pm.expect(jsonData.listings[1].name).to.eql(\"Bob\");",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/listings/page/1",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"listings",
										"page",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get listings by page ascending",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Received listing\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.listings.length).to.eql(3);",
											"        pm.expect(jsonData.listings[0].name).to.eql(\"Kaisa\");",
											"        pm.expect(jsonData.listings[1].name).to.eql(\"Bob\");",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/listings/page/1?sortBy=ascending",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"listings",
										"page",
										"1"
									],
									"query": [
										{
											"key": "sortBy",
											"value": "ascending"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get listings by page 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Received listing\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.listings.length).to.eql(0);",
											"});",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/listings/page/2",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"listings",
										"page",
										"2"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete all listings from a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"   pm.response.to.have.status(204);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all listings from a user Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"pm.test(\"No listings\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.length).to.eql(0);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add listing 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Kaisa\",\n    \"author\": \"Listing Author\",\n    \"price\": 20.99,\n    \"picture\": \"listing.jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add listing 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Bob\",\n    \"author\": \"Listing Author\",\n    \"price\": 20.99,\n    \"picture\": \"listing.jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add listing 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});",
											"",
											"var postRespone = pm.response.json();",
											"",
											"pm.globals.set(\"listingToBeBoughtId\", postRespone.id)",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Michael\",\n    \"author\": \"Listing Author\",\n    \"price\": 20.99,\n    \"picture\": \"listing.jpg\",\n    \"description\":\"nice\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/listings",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"listings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Checkout",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status check\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});\r",
											"var postResponse = pm.response.json();\r",
											"\r",
											"pm.globals.set(\"paypalOrderId\", postResponse.id)\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"email\": \"bobylon@gmail.com\",\r\n    \"id\": \"{{listingToBeBoughtId}}\",\r\n    \"buyer\":\"bob@gmail.com\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/checkout",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Post an order 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status check\", () => {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"seller\": \"bobylon@gmail.com\",\r\n    \"listing\": \"{{listingToBeBoughtId}}\",\r\n    \"paypalOrderId\":\"{{paypalOrderId}}\",\r\n    \"simulate\":true\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all orders (seller)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response message\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.orders[0].isReceived).to.eql(false);\r",
											"    pm.collectionVariables.set(\"orderID\", jsonData.orders[0]._id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a specific order (seller)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response message\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.isReceived).to.eql(false);\r",
											"    pm.expect(jsonData.seller).to.eql(\"bobylon@gmail.com\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/orders/{{orderID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"orders",
										"{{orderID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch order status (seller)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"isShipped\": true,\r\n    \"buyer\": \"bob@gmail.com\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/orders/{{orderID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"orders",
										"{{orderID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the order and verify patch(seller)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response message\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.isShipped).to.eql(true);\r",
											"    pm.expect(jsonData.buyer).to.eql(\"bob@gmail.com\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken2}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bobylon@gmail.com/orders/{{orderID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bobylon@gmail.com",
										"orders",
										"{{orderID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all orders (buyer)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response message\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.orders[0].isReceived).to.eql(false);\r",
											"    pm.collectionVariables.set(\"orderID\", jsonData.orders[0]._id);\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/orders",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a specific order (buyer)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response message\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.isReceived).to.eql(false);\r",
											"    pm.expect(jsonData.seller).to.eql(\"bobylon@gmail.com\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/orders/{{orderID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"orders",
										"{{orderID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Patch order status (buyer)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status check\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"isReceived\": true,\r\n    \"seller\": \"bobylon@gmail.com\"\r\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/orders/{{orderID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"orders",
										"{{orderID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the order and verify patch (buyer)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response message\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.isReceived).to.eql(true);\r",
											"    pm.expect(jsonData.isShipped).to.eql(true);\r",
											"    pm.expect(jsonData.buyer).to.eql(\"bob@gmail.com\")\r",
											"    \r",
											"    pm.globals.set(\"orderHash\", jsonData.hash);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/orders/{{orderID}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"orders",
										"{{orderID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get an order's seller profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status test\", () => {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Seller profile test\", () => {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.userEmail).to.eql(\"bobylon@gmail.com\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/orders/{{orderID}}/seller",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"orders",
										"{{orderID}}",
										"seller"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reviews",
					"item": [
						{
							"name": "Add new review",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Status code is 201\", function () {",
											"   pm.response.to.have.status(201);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"Best seller!\",\n    \"rating\":3,\n    \"order\":\"{{orderHash}}\"\n}"
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all reviews from a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Received review\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData[0].description).to.eql(\"Best seller!\");",
											"        pm.expect(jsonData[0].rating).to.eql(3);",
											"",
											"pm.globals.set(\"reviewPostId\", jsonData[0]._id)",
											"",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific review from user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Received review\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData.description).to.eql(\"Best seller!\");",
											"        pm.expect(jsonData.rating).to.eql(3);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews/{{reviewPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews",
										"{{reviewPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all reviews in the system",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/reviews",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete review from user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"   pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews/{{reviewPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews",
										"{{reviewPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get specific review from user Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 404\", function () {",
											"   pm.response.to.have.status(404);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews/{{reviewPostId}}",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews",
										"{{reviewPostId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete all reviews from a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 204\", function () {",
											"   pm.response.to.have.status(204);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get all reviews from a user Copy",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"   pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Received reviews\", function () {",
											"        var jsonData = pm.response.json();",
											"        pm.expect(jsonData).to.eql([]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Auth-Token",
										"value": "{{xauthtoken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "http://localhost:3000/api/v1/users/bob@gmail.com/reviews",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "3000",
									"path": [
										"api",
										"v1",
										"users",
										"bob@gmail.com",
										"reviews"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "xauthtoken",
			"value": ""
		},
		{
			"key": "email",
			"value": "",
			"type": "string"
		},
		{
			"key": "orderID",
			"value": "",
			"type": "string"
		},
		{
			"key": "xauthtoken2",
			"value": ""
		}
	]
}